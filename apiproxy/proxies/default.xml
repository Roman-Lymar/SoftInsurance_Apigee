<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <FaultRules>
        <FaultRule name="InvalidApiKey">
            <Step>
                <Name>RF-401InvalidApiKey</Name>
            </Step>
            <Condition>(fault.name Matches "InvalidApiKey")</Condition>
        </FaultRule>
        <FaultRule name="FailedToResolveApiKey">
            <Step>
                <Name>RF-401FailedToResolveApiKey</Name>
            </Step>
            <Condition>(fault.name Matches "FailedToResolveAPIKey")</Condition>
        </FaultRule>
        <FaultRule name="InvalidAccessToken">
            <Condition>(fault.name = "invalid_access_token")</Condition>
            <Step>
                <Name>RF-401InvalidAccessToken</Name>
            </Step>
        </FaultRule>
        <FaultRule name="ExpiredAccessToken">
            <Condition>(fault.name = "access_token_expired")</Condition>
            <Step>
                <Name>RF-401ExpiredAccessToken</Name>
            </Step>
        </FaultRule>
        <FaultRule name="SpikeArrestViolation">
            <Condition>(fault.name = "SpikeArrestViolation")</Condition>
            <Step>
                <Name>RF-429SpikeArrestViolation</Name>
            </Step>
        </FaultRule>
        <FaultRule name="ResourсeNotFound">
            <Step>
                <Name>RF-404NotFound</Name>
            </Step>
            <Condition>(response.status.code == 404)</Condition>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>SA-Spike-Arrest</Name>
            </Step>
            <Step>
                <Name>VAK-VerifyAPIKey</Name>
                <Condition>request.verb != "OPTIONS"</Condition>
            </Step>
            <Step>
                <Name>OA-OAuth-v20-1</Name>
            </Step>
            <Step>
                <Name>Q-Quota</Name>
            </Step>
            <Step>
                <Name>RP-RegexProtection</Name>
            </Step>
            <Step>
                <Name>JTP-JSONThreatProtection</Name>
            </Step>
            <Step>
                <Name>JS-variables</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="OptionsPreFlight">
            <Request/>
            <Response>
                <Step>
                    <Name>AM-AddCORS</Name>
                </Step>
            </Response>
            <Condition>request.verb == "OPTIONS" AND request.header.origin != null AND request.header.Access-Control-Request-Method != null</Condition>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <Name>JS-format</Name>
            </Step>
        </Response>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/softinsurance/v1</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="client">
        <Condition>(proxy.pathsuffix MatchesPath "/clients/**") or (proxy.pathsuffix MatchesPath "/clients")</Condition>
        <TargetEndpoint>client</TargetEndpoint>
    </RouteRule>
    <RouteRule name="auth">
        <Condition>(proxy.pathsuffix MatchesPath "/users/**") or (proxy.pathsuffix MatchesPath "/users")</Condition>
        <TargetEndpoint>auth</TargetEndpoint>
    </RouteRule>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>